Problem:
    You have a class hierarchy in which a subclass is practically the same as its superclass.

Solution:
    Merge the subclass and superclass.

Why/Benefits:
    A feature was removed from a subclass, a method was moved to the superclass... and now you have two
    look-alike classes.

    - Program complexity is reduced.
    - Less classes need to be loaded
    - Navigating through to code is easier
    - Less things to keep straight in your head


How to refactor:
    1. Select which class is easier to remove: the superclass or its subclass.

    2. Use 'Pull Up Field' and 'Pull Up Method' if you decide to get rid of the subclass.
    If you choose to eliminate the superclass, go for 'Push Down Field' and 'Push Down Method'.

    3. Replace all uses of the class that youâ€™re deleting with the class to which the fields and methods are to be
    migrated.
    Often this will be code for creating classes, variable and parameter typing, and documentation in code comments.

    4. Delete the empty class.

